{"ast":null,"code":"var _jsxFileName = \"/Users/lgedeon/Repos/personal/stimpy/src/ListTasks/presentational.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { TASKS } from '../constants.js';\nimport { StyledListTasks, StyledTask } from './styled.jsx';\nimport { SECTIONS } from '../constants.js';\nimport * as services from '../utils/services.js';\n\nclass ListTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onRepairWheel = e => {\n      const {\n        car,\n        mechanic,\n        position,\n        setError,\n        showTasks,\n        setLoading,\n        setScore\n      } = this.props;\n      showTasks(false);\n      setLoading(true);\n      services.actionWheels(car.id, mechanic, position, e.target.innerText.toLowerCase()).then(response => {\n        this.onUpdate(response.data);\n        setScore(5);\n      }).catch(error => setError(`(${error.response.data.code}) - ${error.response.data.message}`)).finally(() => setLoading(false));\n    };\n\n    this.state = {};\n  }\n\n  onUpdate(data) {\n    const {\n      car,\n      setStatus,\n      setError\n    } = this.props;\n    setError(null);\n    setStatus(data);\n    services.checkCar(car.id).then(status => {\n      status.data.ready && this.props.history.push(SECTIONS[2]);\n    });\n  }\n\n  render() {\n    const {\n      wheel_tasks\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StyledListTasks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, wheel_tasks && TASKS.map((task, i) => /*#__PURE__*/React.createElement(StyledTask, {\n      key: i,\n      onClick: this.onRepairWheel,\n      data: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }\n    }, task)));\n  }\n\n}\n\nexport default withRouter(ListTasks);","map":{"version":3,"sources":["/Users/lgedeon/Repos/personal/stimpy/src/ListTasks/presentational.jsx"],"names":["React","withRouter","TASKS","StyledListTasks","StyledTask","SECTIONS","services","ListTasks","Component","constructor","props","onRepairWheel","e","car","mechanic","position","setError","showTasks","setLoading","setScore","actionWheels","id","target","innerText","toLowerCase","then","response","onUpdate","data","catch","error","code","message","finally","state","setStatus","checkCar","status","ready","history","push","render","wheel_tasks","map","task","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,cAA5C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAKnBC,aALmB,GAKFC,CAAD,IAAO;AACtB,YAAM;AACLC,QAAAA,GADK;AAELC,QAAAA,QAFK;AAGLC,QAAAA,QAHK;AAILC,QAAAA,QAJK;AAKLC,QAAAA,SALK;AAMLC,QAAAA,UANK;AAOLC,QAAAA;AAPK,UAQF,KAAKT,KART;AAUAO,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,QAAQ,CAACc,YAAT,CAAsBP,GAAG,CAACQ,EAA1B,EAA8BP,QAA9B,EAAwCC,QAAxC,EAAkDH,CAAC,CAACU,MAAF,CAASC,SAAT,CAAmBC,WAAnB,EAAlD,EACEC,IADF,CACQC,QAAD,IAAc;AACnB,aAAKC,QAAL,CAAcD,QAAQ,CAACE,IAAvB;AACAT,QAAAA,QAAQ,CAAC,CAAD,CAAR;AACA,OAJF,EAKEU,KALF,CAKSC,KAAD,IAAWd,QAAQ,CAAE,IAAGc,KAAK,CAACJ,QAAN,CAAeE,IAAf,CAAoBG,IAAK,OAAMD,KAAK,CAACJ,QAAN,CAAeE,IAAf,CAAoBI,OAAQ,EAAhE,CAL3B,EAMEC,OANF,CAMU,MAAMf,UAAU,CAAC,KAAD,CAN1B;AAOA,KAzBkB;;AAElB,SAAKgB,KAAL,GAAa,EAAb;AACA;;AAwBDP,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACd,UAAM;AAAEf,MAAAA,GAAF;AAAOsB,MAAAA,SAAP;AAAkBnB,MAAAA;AAAlB,QAA+B,KAAKN,KAA1C;AACAM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAmB,IAAAA,SAAS,CAACP,IAAD,CAAT;AAEAtB,IAAAA,QAAQ,CAAC8B,QAAT,CAAkBvB,GAAG,CAACQ,EAAtB,EACEI,IADF,CACQY,MAAD,IAAY;AAChBA,MAAAA,MAAM,CAACT,IAAP,CAAYU,KAAb,IACC,KAAK5B,KAAL,CAAW6B,OAAX,CAAmBC,IAAnB,CAAwBnC,QAAQ,CAAC,CAAD,CAAhC,CADD;AAEA,KAJF;AAKA;;AAEDoC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKhC,KAA7B;AAEA,wBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGgC,WAAD,IACCxC,KAAK,CAACyC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,CAAjB;AAAoB,MAAA,OAAO,EAAE,KAAKlC,aAAlC;AAAiD,MAAA,IAAI,EAAEiC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DA,IAA9D,CADD,CAHH,CADD;AAWA;;AAtDsC;;AA0DxC,eAAe3C,UAAU,CAACM,SAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { TASKS } from '../constants.js';\nimport { StyledListTasks, StyledTask } from './styled.jsx';\nimport { SECTIONS } from '../constants.js';\nimport * as services from '../utils/services.js';\n\nclass ListTasks extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tonRepairWheel = (e) => {\n\t\tconst { \n\t\t\tcar, \n\t\t\tmechanic, \n\t\t\tposition, \n\t\t\tsetError, \n\t\t\tshowTasks, \n\t\t\tsetLoading, \n\t\t\tsetScore,\n\t\t} = this.props;\n\n\t\tshowTasks(false);\n\t\tsetLoading(true);\n\t\tservices.actionWheels(car.id, mechanic, position, e.target.innerText.toLowerCase())\n\t\t\t.then((response) => {\n\t\t\t\tthis.onUpdate(response.data);\n\t\t\t\tsetScore(5);\n\t\t\t})\n\t\t\t.catch((error) => setError(`(${error.response.data.code}) - ${error.response.data.message}`))\n\t\t\t.finally(() => setLoading(false))\n\t}\n\n\tonUpdate(data) {\n\t\tconst { car, setStatus, setError } = this.props;\n\t\tsetError(null);\n\t\tsetStatus(data);\n\n\t\tservices.checkCar(car.id)\n\t\t\t.then((status) => {\n\t\t\t\t(status.data.ready) && \n\t\t\t\t this.props.history.push(SECTIONS[2]);\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst { wheel_tasks } = this.props;\n\n\t\treturn(\n\t\t\t<StyledListTasks>\n\t\t\t\t{\n\t\t\t\t\t(wheel_tasks) &&\n\t\t\t\t\t\tTASKS.map((task, i) =>\n\t\t\t\t\t\t\t<StyledTask key={i} onClick={this.onRepairWheel} data={task}>{task}</StyledTask>\n\t\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</StyledListTasks>\n\t\t);\n\n\t}\n\n}\n\nexport default withRouter(ListTasks);\n"]},"metadata":{},"sourceType":"module"}